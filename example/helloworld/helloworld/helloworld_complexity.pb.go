// Code generated by protoc-gen-go-complexity. DO NOT EDIT.

package helloworld

import (
	context "context"
	complexity "github.com/j2gg0s/grpc-complexity/complexity"
	grpc "google.golang.org/grpc"
)

type GreeterComplexityServer interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) map[string]int
}
type DefaultGreeterComplexityServer struct{}

func (s *DefaultGreeterComplexityServer) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) map[string]int {
	return map[string]int{"default": 1}
}

func RegisterGreeterComplexityServer(s complexity.ServiceRegistrar, srv GreeterComplexityServer) {
	s.RegisterService(&GreeterComplexity_ServiceDesc, srv)
}

func _Greeter_SayHello_ComplexityHandler(srv interface{}, ctx context.Context, req interface{}) map[string]int {
	return srv.(GreeterComplexityServer).SayHello(ctx, req.(*HelloRequest))
}

var GreeterComplexity_ServiceDesc = complexity.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterComplexityServer)(nil),
	Methods: []complexity.MethodDesc{
		{
			MethodName:        "SayHello",
			ComplexityHandler: _Greeter_SayHello_ComplexityHandler,
		},
	},
	Metadata: "example/helloworld/helloworld/helloworld.proto",
}
